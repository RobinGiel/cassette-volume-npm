{"version":3,"sources":["webpack://cassetteCore/webpack/universalModuleDefinition","webpack://cassetteCore/webpack/bootstrap","webpack://cassetteCore/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://cassetteCore/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://cassetteCore/./src/utils/console.js","webpack://cassetteCore/./src/utils/createSingleGlobalContext.js","webpack://cassetteCore/./node_modules/array-find-index/index.js","webpack://cassetteCore/(webpack)/buildin/global.js","webpack://cassetteCore/./src/PlayerContext.js","webpack://cassetteCore/./src/GroupContext.js","webpack://cassetteCore/./src/constants.js","webpack://cassetteCore/./src/PlayerPropTypes.js","webpack://cassetteCore/./src/factories/createCustomMediaElement.js","webpack://cassetteCore/./src/utils/ShuffleManager.js","webpack://cassetteCore/./src/utils/isPlaylistValid.js","webpack://cassetteCore/./src/utils/getTrackSources.js","webpack://cassetteCore/./src/utils/findTrackIndexByUrl.js","webpack://cassetteCore/./src/utils/snapshot.js","webpack://cassetteCore/./src/utils/getSourceList.js","webpack://cassetteCore/./src/utils/getTimeRangesArray.js","webpack://cassetteCore/./src/utils/getRepeatStrategy.js","webpack://cassetteCore/./src/utils/convertToNumberWithinIntervalBounds.js","webpack://cassetteCore/./src/utils/getDisplayText.js","webpack://cassetteCore/./src/utils/parseTimeString.js","webpack://cassetteCore/./src/utils/getInitialDuration.js","webpack://cassetteCore/./src/PlayerContextProvider.js","webpack://cassetteCore/./src/utils/getReactParentNameStack.js","webpack://cassetteCore/./src/PlayerContextConsumer.js","webpack://cassetteCore/./src/PlayerContextGroup.js","webpack://cassetteCore/./src/FullscreenContext.js","webpack://cassetteCore/./src/FullscreenContextProvider.js","webpack://cassetteCore/./src/playerContextFilter.js","webpack://cassetteCore/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","logWarning","log","console","logError","error","warn","packageVersion","version","_global","window","global","__cassette_contexts__","_ref","displayName","_ref$defaultValue","defaultValue","keysWillUpdate","ExistingContext","_console__WEBPACK_IMPORTED_MODULE_1__","flags","_iterator","_isArray","Array","isArray","_i","iterator","_ref2","length","next","done","Context","react__WEBPACK_IMPORTED_MODULE_0__","prev","mask","_iterator2","_isArray2","_i2","_ref3","__cassetteGetObservedBits","keys","observedBits","_iterator3","_isArray3","_i3","_ref4","arr","predicate","ctx","findIndex","TypeError","list","len","g","Function","eval","e","PlayerContext","createSingleGlobalContext","GroupContext","repeatStrategyOptions","requiredOnlyUnlessHasProp","propType","altPropName","warnedAboutDefiningBoth","props","propName","componentName","_len","arguments","rest","_key","isRequired","apply","concat","Error","controlKeyword","external_root_PropTypes_commonjs_prop_types_commonjs2_prop_types_amd_prop_types_default","a","oneOf","control","oneOfType","func","crossOriginAttribute","PlayerPropTypes_repeatStrategy","mediaSource","shape","src","string","type","mediaSessionAction","mediaSessionArtwork","sizes","PlayerPropTypes_track","url","sources","arrayOf","title","artist","album","artwork","duration","number","startingTime","isUnboundedStream","bool","meta","progressDirection","seekMode","aspectRatio","prop","undefined","split","some","isNaN","loopchange","srcrequest","factories_createCustomMediaElement","media","MutationObserver","dispatchEvent","Event","observe","attributes","attributeFilter","currentSrc","set","srcRequested","_goForward","forwardStack","backStack","currentItem","item","push","pop","_findNextItem","allowMore","indexOf","_allItemsMatch","nextItem","Math","floor","random","utils_ShuffleManager","ShuffleManager","options","_list","_forwardStack","_backStack","_currentItem","_allowBackShuffle","Boolean","allowBackShuffle","_proto","findNextItem","currentIndex","setCurrentIndex","findPreviousItem","pickNextItem","index","setList","setOptions","_arr","clear","utils_isPlaylistValid","playlist","blankSources","utils_getTrackSources","_playlist$index","utils_findTrackIndexByUrl","array_find_index_default","track","source","veryLongKey","versionKey","migrations","oldSnapshot","_objectSpread2","__unstable__","_objectSpread","_objectWithoutPropertiesLoose","utils_getSourceList","map","_","utils_getTimeRangesArray","timeRangesObj","timeRangesArray","start","end","utils_getRepeatStrategy","loop","cycle","utils_convertToNumberWithinIntervalBounds","min","max","Infinity","utils_getDisplayText","displayText","utils_parseTimeString","str","seconds","factor","times","slice","parseInt","utils_getInitialDuration","playErrorHandler","err","warningMessage","Date","toLocaleTimeString","supportableMediaSessionActions","defaultState","paused","currentTime","seekPreviewTime","seekInProgress","awaitingResumeOnSeekComplete","awaitingPlayAfterTrackLoad","bufferedRanges","playedRanges","seekableRanges","stalled","shouldRequestPlayOnNextUpdate","mediaCannotPlay","maxKnownTime","getGoToTrackState","prevState","_ref$shouldPlay","shouldPlay","_ref$shouldForceLoad","shouldForceLoad","isNewTrack","activeTrackIndex","shouldLoadAsNew","trackLoading","awaitingForceLoad","PlayerContextProvider_PlayerContextProvider","_Component","PlayerContextProvider","_this","startingTrackIndex","playlistIsValid","initialStateSnapshot","restoredStateFromSnapshot","snapshot","_migratedSnapshot$ver","reduce","migration","volume","muted","shuffle","playbackRate","activeTrackSrc","restoredStateValues","awaitingPlay","useCurrentTime","newTrackIndex","restoreStateFromSnapshot","JSON","stringify","state","PlayerContextProvider_objectSpread","defaultVolume","defaultMuted","defaultRepeatStrategy","defaultShuffle","defaultPlaybackRate","setVolumeInProgress","autoplay","__playlist__","lastStableVolume","shuffler","videoHostElementList","videoHostOccupiedCallbacks","Map","videoHostVacatedCallbacks","handleTrackPlaybackFailure","_assertThisInitialized","togglePause","selectTrackIndex","forwardSkip","backSkip","seekPreview","seekComplete","setVolume","setVolumeComplete","toggleMuted","toggleShuffle","setRepeatStrategy","setPlaybackRate","registerVideoHostElement","renderVideoIntoHostElement","unregisterVideoHostElement","updateVideoHostElement","handleMediaPlay","handleMediaPause","handleMediaSrcrequest","handleMediaEnded","handleMediaEmptied","handleMediaStalled","handleMediaCanplaythrough","handleMediaCanplay","handleMediaTimeupdate","handleMediaLoadeddata","handleMediaVolumechange","handleMediaDurationchange","handleMediaProgress","handleMediaLoopchange","handleMediaRatechange","_inheritsLoose","componentDidMount","_this2","createMediaElement","_this$props","crossOrigin","autoplayDelayInSeconds","mediaElementRef","getPosterImageForTrack","getMediaTitleAttributeForTrack","onActiveTrackUpdate","_this$state","setAttribute","addEventListener","setMediaElementSources","mediaContainer","appendChild","setState","delayTimeout","setTimeout","trackIndex","previousTrack","previousTrackIndex","getDerivedStateFromProps","nextProps","newPlaylist","baseNewState","prevSources","currentSources","componentDidUpdate","prevProps","_this3","newSources","prevTrack","newTrack","stealMediaSession","clearTimeout","snapshotUpdateTimeout","onStateSnapshot","getStateSnapshot","componentWillUnmount","removeEventListener","querySelectorAll","gapLengthTimeout","_this4","MediaSession","navigator","mediaSession","metadata","MediaMetadata","action","supportedMediaSessionActions","seekLength","mediaSessionSeekLengthInSeconds","forEach","handler","setActionHandler","firstChild","removeChild","sourceElement","document","createElement","load","event","onTrackPlaybackFailure","hostElement","onHostOccupied","onHostVacated","_this5","cancelAnimationFrame","videoHostUpdateRaf","requestAnimationFrame","filter","elem","delete","parentNode","playing","oldHostElement","play","onVacated","onOccupied","_this$props2","loadFirstTrackOnPlaylistComplete","_this$state2","goToTrack","gapLengthInSeconds","_this$media","played","_this$props3","onTimeUpdate","_this$state3","_this$media2","_this6","activeTrack","activeTrackAtLastDurationChange","buffered","seekable","pause","playPromise","catch","Promise","reject","args","_this$props4","stayOnBackSkipThreshold","_this$state4","previousItem","_this$state5","targetTime","baseStateUpdate","_ref5","_ref6","ended","_this$state6","inProgress","volumeInBounds","repeatStrategy","rate","getControlProps","playerContext","awaitingPlayResume","onTogglePause","onSelectTrackIndex","onBackSkip","onForwardSkip","onSeekPreview","onSeekComplete","onSetVolume","onSetVolumeComplete","onToggleMuted","onToggleShuffle","onSetRepeatStrategy","onSetPlaybackRate","render","_this7","external_root_React_commonjs_react_commonjs2_react_amd_react_default","external_root_React_commonjs_react_commonjs2_react_amd_react_","ref","hidden","Provider","children","defaultProps","maintainPlaybackRate","PlayerContextProvider_PlayerContextGroupMember","_Component2","PlayerContextGroupMember","_proto2","groupContext","registerMediaElement","mediaElement","unregisterMediaElement","_this8","_this$props5","PlayerContextProvider_objectWithoutPropertiesLoose","_extends","groupProps","src_PlayerContextProvider","Consumer","utils_getReactParentNameStack","componentInstance","parentStack","owner","_reactInternalFiber","_debugOwner","src_PlayerContextConsumer","filterList","warnedAboutFilterList","warning","unstable_observedBits","usedContext","src_PlayerContextGroup","PlayerContextGroup","PlayerContextGroup_assertThisInitialized","enforceOneMediaSourceOnly","mediaElements","PlayerContextGroup_inheritsLoose","element","target","PlayerContextGroup_objectSpread","FullscreenContext","fullscreen","requestFullscreen","requestExitFullscreen","fullscreenStyle","width","height","FullscreenContextProvider_FullscreenContextProvider","_PureComponent","FullscreenContextProvider","FullscreenContextProvider_assertThisInitialized","handleFullscreenChange","fullscreenElement","FullscreenContextProvider_inheritsLoose","fullscreenEnabled","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","mozExitFullscreen","documentFullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","getFullscreenContext","fullscreenContext","style","src_FullscreenContextProvider","src_playerContextFilter","component","contextPropNames","warned","childName","PlayerContextFilter","childProps","playerContextFilter_objectSpread","FullscreenContextConsumer","donotuse_PlayerContext","donotuse_FullscreenContext"],"mappings":"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","file":"es5/cassette-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cassetteCore\"] = factory(require(\"react\"), require(\"prop-types\"));\n\telse\n\t\troot[\"cassetteCore\"] = factory(root[\"React\"], root[\"PropTypes\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/* eslint-disable no-console */\n\nconst log = console.log.bind(console);\n\nexport const logError = console.error ? console.error.bind(console) : log;\nexport const logWarning = console.warn ? console.warn.bind(console) : log;\n","import { createContext } from 'react';\n\nimport { logWarning } from './console';\n\nconst packageVersion = require('../../package.json').version;\n\nconst _global = typeof window === 'undefined' ? global : window;\n_global.__cassette_contexts__ = _global.__cassette_contexts__ || {};\n\nfunction createSingleGlobalContext({\n  displayName,\n  defaultValue = null,\n  keysWillUpdate\n}) {\n  const ExistingContext = _global.__cassette_contexts__[displayName];\n  if (ExistingContext) {\n    if (ExistingContext.packageVersion !== packageVersion) {\n      logWarning(\n        `Warning: multiple versions of ${displayName} from the @cassette/core` +\n          ` package have been loaded. v${packageVersion} will be ignored and` +\n          ` v${ExistingContext.packageVersion} will be used instead.`\n      );\n    }\n    return ExistingContext;\n  }\n  // inspired by:\n  // https://github.com/philosaf/observed-bits/blob/master/src/index.js\n  const flags = {};\n  let i = 0;\n  for (const key of keysWillUpdate) {\n    flags[key] = 1 << i++;\n  }\n  const Context = createContext(defaultValue, function getChangedBits(\n    prev,\n    next\n  ) {\n    let mask = 0;\n    for (const key of keysWillUpdate) {\n      if (prev[key] !== next[key]) {\n        mask |= flags[key];\n      }\n    }\n    return mask;\n  });\n  Context.__cassetteGetObservedBits = keys => {\n    let observedBits = 0;\n    for (const key of keys) {\n      observedBits |= flags[key];\n    }\n    return observedBits;\n  };\n  Context.displayName = displayName;\n  Context.packageVersion = packageVersion;\n  _global.__cassette_contexts__[displayName] = Context;\n  return Context;\n}\n\nexport default createSingleGlobalContext;\n","'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\n// TODO: test to make sure context contents stay in sync with\n// enumerated list here\n\nexport default createSingleGlobalContext({\n  displayName: 'PlayerContext',\n  keysWillUpdate: [\n    'playlist',\n    'activeTrackIndex',\n    'trackLoading',\n    'paused',\n    'currentTime',\n    'seekPreviewTime',\n    'seekInProgress',\n    'awaitingPlayResume',\n    'duration',\n    'bufferedRanges',\n    'playedRanges',\n    'seekableRanges',\n    'volume',\n    'muted',\n    'shuffle',\n    'stalled',\n    'playbackRate',\n    'setVolumeInProgress',\n    'repeatStrategy',\n    'mediaCannotPlay'\n  ]\n});\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\n\nexport default createSingleGlobalContext({\n  displayName: 'GroupContext',\n  keysWillUpdate: ['groupProps']\n});\n","export const repeatStrategyOptions = ['none', 'playlist', 'track'];\n","import PropTypes from 'prop-types';\n\nimport { repeatStrategyOptions } from './constants';\nimport { logWarning } from './utils/console';\n\nfunction requiredOnlyUnlessHasProp(propType, altPropName) {\n  let warnedAboutDefiningBoth = false;\n  function validate(props, propName, componentName, ...rest) {\n    if (propName in props) {\n      if (!warnedAboutDefiningBoth && altPropName in props) {\n        logWarning(\n          `Do not define both the '${propName}' and '${altPropName}' props.`\n        );\n        warnedAboutDefiningBoth = true;\n      }\n      return propType.isRequired(props, propName, componentName, ...rest);\n    }\n    if (!(altPropName in props)) {\n      return new Error(\n        `If the '${altPropName}' prop is not defined, '${propName}' must be.`\n      );\n    }\n  }\n  return validate;\n}\n\nexport const controlKeyword = PropTypes.oneOf([\n  'playpause',\n  'backskip',\n  'forwardskip',\n  'volume',\n  'mute',\n  'repeat',\n  'shuffle',\n  'progress',\n  'progressdisplay',\n  'fullscreen',\n  'spacer'\n]);\n\nexport const control = PropTypes.oneOfType([PropTypes.func, controlKeyword]);\n\nexport const crossOriginAttribute = PropTypes.oneOf([\n  'anonymous',\n  'use-credentials'\n]);\n\nexport const repeatStrategy = PropTypes.oneOf(repeatStrategyOptions);\n\nexport const mediaSource = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\nexport const mediaSessionAction = PropTypes.oneOf([\n  'play',\n  'pause',\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n]);\n\nexport const mediaSessionArtwork = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  type: PropTypes.string\n});\n\nexport const track = PropTypes.shape({\n  url: requiredOnlyUnlessHasProp(PropTypes.string, 'sources'),\n  sources: requiredOnlyUnlessHasProp(\n    PropTypes.arrayOf(mediaSource.isRequired),\n    'url'\n  ),\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.string,\n  album: PropTypes.string,\n  artwork: PropTypes.arrayOf(mediaSessionArtwork.isRequired),\n  duration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  startingTime: PropTypes.number,\n  isUnboundedStream: PropTypes.bool,\n  meta: PropTypes.object\n});\n\nexport const progressDirection = PropTypes.oneOf([\n  'left',\n  'right',\n  'up',\n  'down'\n]);\n\nexport const seekMode = PropTypes.oneOf(['paused', 'immediate', 'onrelease']);\n\nexport function aspectRatio(props, propName) {\n  const prop = props[propName];\n  if (prop === undefined) {\n    return;\n  }\n  if (\n    typeof prop !== 'string' ||\n    prop.split(':').length !== 2 ||\n    prop.split(':').some(isNaN)\n  ) {\n    return new Error(\n      `The ${propName} prop should be a string of the form 'x:y'. Example: 16:9`\n    );\n  }\n}\n","const loopchange = 'loopchange';\nconst srcrequest = 'srcrequest';\n\nfunction createCustomMediaElement(media) {\n  new MutationObserver(() => {\n    media.dispatchEvent(new Event(loopchange));\n  }).observe(media, {\n    attributes: true,\n    attributeFilter: ['loop']\n  });\n  // Don't let the media src property get modified directly.\n  // Instead, when it does get set, dispatch an event to be\n  // handled in a way that doesn't conflict with the loaded\n  // playlist.\n  Object.defineProperty(media, 'src', {\n    get: () => media.currentSrc,\n    set: src => {\n      const e = new Event(srcrequest);\n      e.srcRequested = src;\n      media.dispatchEvent(e);\n    }\n  });\n  return media;\n}\n\nexport default createCustomMediaElement;\n","/* ShuffleManager\n *\n * Manages navigation throughout a list which is:\n * - Sourced from another provided list\n * - In random order (except to avoid consecutive duplicates)\n * - Extended endlessly on-the-fly, as needed\n * - Able to have future history overwritten by non-random choices\n * - Able to swap source lists and maintain shuffle order for common members\n */\n\nexport class ShuffleManager {\n  constructor(list, options = {}) {\n    this._list = list;\n    this._forwardStack = [];\n    this._backStack = [];\n    this._currentItem = undefined;\n\n    this._allowBackShuffle = Boolean(options.allowBackShuffle);\n  }\n\n  findNextItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._forwardStack,\n      this._backStack,\n      this._currentItem,\n      true\n    );\n    return this._currentItem;\n  }\n\n  findPreviousItem(currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    this._currentItem = _findNextItem(\n      this._list,\n      this._backStack,\n      this._forwardStack,\n      this._currentItem,\n      this._allowBackShuffle\n    );\n    return this._currentItem;\n  }\n\n  pickNextItem(index, currentIndex) {\n    if (currentIndex !== undefined) {\n      this.setCurrentIndex(currentIndex);\n    }\n    if (this._list[index] === undefined) {\n      return undefined;\n    }\n    if (this._currentItem !== undefined) {\n      this._backStack.push(this._currentItem);\n    }\n    this._forwardStack.length = 0;\n    this._currentItem = this._list[index];\n    return this._currentItem;\n  }\n\n  setList(list) {\n    this._list = list;\n  }\n\n  setOptions(options) {\n    for (const o of Object.keys(options)) {\n      switch (o) {\n        case 'allowBackShuffle':\n          this[`_${o}`] = Boolean(options[o]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  setCurrentIndex(currentIndex) {\n    const item = this._list[currentIndex];\n    if (this._currentItem !== item) {\n      this.clear();\n      this._currentItem = item;\n    }\n  }\n\n  clear() {\n    this._forwardStack.length = 0;\n    this._backStack.length = 0;\n    this._currentItem = undefined;\n  }\n}\n\nfunction _goForward(n, forwardStack, backStack, currentItem) {\n  let item = currentItem;\n  for (let i = 0; i < n; i++) {\n    if (!forwardStack.length) {\n      // rollback before erroring (note stack reversal)\n      _goForward(i, backStack, forwardStack, item);\n      throw `Moving ${n} places was not possible!`;\n    }\n    backStack.push(item);\n    item = forwardStack.pop();\n  }\n  return item;\n}\n\nfunction _allItemsMatch(list, item) {\n  if (!list.length) {\n    return false;\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (item !== list[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction _findNextItem(list, forwardStack, backStack, currentItem, allowMore) {\n  let item = currentItem;\n  if (!list.length) {\n    return undefined;\n  }\n  for (let i = 1; i <= forwardStack.length; i++) {\n    if (list.indexOf(forwardStack[forwardStack.length - i]) !== -1) {\n      return _goForward(i, forwardStack, backStack, item);\n    }\n  }\n  if (!allowMore) {\n    return undefined;\n  }\n  if (_allItemsMatch(list, item)) {\n    // we can serve this as our \"next\" item but we\n    // won't modify our history since it's the same.\n    return item;\n  }\n  let nextItem;\n  do {\n    nextItem = list[Math.floor(Math.random() * list.length)];\n  } while (item === nextItem || nextItem === undefined);\n  // if we're skipping items that aren't in our current list we may\n  // have some items in our forwardStack - make sure we move to the front.\n  item = _goForward(forwardStack.length, forwardStack, backStack, item);\n  if (item !== undefined) {\n    backStack.push(item);\n  }\n  return nextItem;\n}\n\nexport default ShuffleManager;\n","function isPlaylistValid(playlist) {\n  return Boolean(playlist && playlist.length);\n}\n\nexport default isPlaylistValid;\n","import isPlaylistValid from './isPlaylistValid';\n\nconst blankSources = [{ src: '' }];\n\nfunction getTrackSources(playlist, index) {\n  if (!isPlaylistValid(playlist)) {\n    return blankSources;\n  }\n  const { sources, url } = playlist[index];\n  if (sources) {\n    return sources.length ? sources : blankSources;\n  }\n  return [{ src: url }];\n}\n\nexport default getTrackSources;\n","import arrayFindIndex from 'array-find-index';\n\nfunction findTrackIndexByUrl(playlist, url) {\n  return arrayFindIndex(playlist, track => {\n    if (track.sources) {\n      return arrayFindIndex(track.sources, source => source.src === url) !== -1;\n    }\n    return track.url && url === track.url;\n  });\n}\n\nexport default findTrackIndexByUrl;\n","import isPlaylistValid from './isPlaylistValid';\nimport getTrackSources from './getTrackSources';\nimport findTrackIndexByUrl from './findTrackIndexByUrl';\n\nconst veryLongKey =\n  '__highly_unstable_snapshot_internals_which_will_break_your_app_if_you_use_them_directly__';\nconst versionKey = '__cassette_snapshot_version__';\n\n// IMPORTANT: new migrations *must* always be added to the end since\n// the tracked snapshot version is based on the migration index.\n// If there is a crash-inducing bug in an existing migration, it can be patched\n// in-place, but it should never be removed from the migrations array.\nconst migrations = [\n  oldSnapshot => {\n    const { __unstable__, ...rest } = oldSnapshot;\n    return {\n      ...rest,\n      [veryLongKey]: __unstable__\n    };\n  }\n];\n\nexport function getStateSnapshot(state) {\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    duration,\n    __playlist__\n  } = state;\n  return {\n    [versionKey]: migrations.length,\n    [veryLongKey]: {\n      paused,\n      // currentTime can't be restored for unbounded live streams\n      currentTime: duration === Infinity ? 0 : currentTime,\n      activeTrackIndex,\n      volume,\n      muted,\n      loop,\n      cycle,\n      shuffle,\n      playbackRate,\n      activeTrackSrc: isPlaylistValid(__playlist__)\n        ? getTrackSources(__playlist__, activeTrackIndex)[0].src\n        : null\n    }\n  };\n}\n\nexport function restoreStateFromSnapshot(snapshot, props) {\n  const migratedSnapshot = migrations\n    .slice(snapshot[versionKey] || 0)\n    .reduce((oldSnapshot, migration) => migration(oldSnapshot), snapshot);\n  const {\n    paused,\n    currentTime,\n    activeTrackIndex,\n    volume,\n    muted,\n    loop,\n    cycle,\n    shuffle,\n    playbackRate,\n    activeTrackSrc\n  } = migratedSnapshot[veryLongKey];\n  const restoredStateValues = {};\n  if (isPlaylistValid(props.playlist) && typeof paused === 'boolean') {\n    // using awaitingPlay instead of paused triggers an animation\n    restoredStateValues.awaitingPlay = !paused;\n  }\n  if (typeof volume === 'number' && volume >= 0 && volume <= 1) {\n    restoredStateValues.volume = volume;\n  }\n  if (typeof muted === 'boolean') {\n    restoredStateValues.muted = muted;\n  }\n  if (typeof loop === 'boolean') {\n    restoredStateValues.loop = loop;\n  }\n  if (typeof cycle === 'boolean') {\n    restoredStateValues.cycle = cycle;\n  }\n  if (typeof shuffle === 'boolean') {\n    restoredStateValues.shuffle = shuffle;\n  }\n  if (typeof playbackRate === 'number') {\n    restoredStateValues.playbackRate = playbackRate;\n  }\n  let useCurrentTime = false;\n  if (\n    typeof activeTrackSrc === 'string' &&\n    typeof activeTrackIndex === 'number' &&\n    activeTrackIndex >= 0\n  ) {\n    // let's try staying on the same track index\n    const currentSrc =\n      props.playlist[activeTrackIndex] &&\n      getTrackSources(props.playlist, activeTrackIndex)[0].src;\n    if (currentSrc && activeTrackSrc === currentSrc) {\n      restoredStateValues.activeTrackIndex = activeTrackIndex;\n      useCurrentTime = true;\n    } else {\n      /* if the track we were playing before is in the new playlist,\n       * update the activeTrackIndex.\n       */\n      const newTrackIndex = findTrackIndexByUrl(props.playlist, activeTrackSrc);\n      if (newTrackIndex !== -1) {\n        restoredStateValues.activeTrackIndex = newTrackIndex;\n        useCurrentTime = true;\n      }\n    }\n  }\n  if (useCurrentTime && typeof currentTime === 'number' && currentTime >= 0) {\n    restoredStateValues.currentTime = currentTime;\n  }\n  return restoredStateValues;\n}\n","import getTrackSources from './getTrackSources';\n\n// collapses playlist into flat list containing\n// the first source url for each track\nfunction getSourceList(playlist) {\n  return (playlist || []).map((_, i) => getTrackSources(playlist, i)[0].src);\n}\n\nexport default getSourceList;\n","function getTimeRangesArray(timeRangesObj) {\n  const timeRangesArray = Array(timeRangesObj.length);\n  for (let i = 0; i < timeRangesObj.length; i++) {\n    timeRangesArray[i] = {\n      start: timeRangesObj.start(i),\n      end: timeRangesObj.end(i)\n    };\n  }\n  return timeRangesArray;\n}\n\nexport default getTimeRangesArray;\n","function getRepeatStrategy(loop, cycle) {\n  if (loop) {\n    return 'track';\n  }\n  if (cycle) {\n    return 'playlist';\n  }\n  return 'none';\n}\n\nexport default getRepeatStrategy;\n","function convertToNumberWithinIntervalBounds(number, min, max) {\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n  return Math.max(min, Math.min(number, max));\n}\n\nexport default convertToNumberWithinIntervalBounds;\n","function getDisplayText(track) {\n  if (!track) {\n    return '';\n  }\n  if (track.displayText) {\n    // TODO: Remove this check when support for the displayText prop is gone.\n    return track.displayText;\n  }\n  if (track.title && track.artist) {\n    return `${track.artist} - ${track.title}`;\n  }\n  return track.title || track.artist || track.album || '';\n}\n\nexport default getDisplayText;\n","function parseTimeString(str) {\n  let seconds = 0;\n  let factor = 1;\n  const times = str.split(':').slice(-3);\n  while (times.length > 0) {\n    seconds += factor * parseInt(times.pop(), 10);\n    factor *= 60;\n  }\n  return seconds;\n}\n\nexport default parseTimeString;\n","import parseTimeString from './parseTimeString';\n\nfunction getInitialDuration(track) {\n  let duration = 0;\n  if (track.duration) {\n    if (typeof track.duration === 'string') {\n      duration = parseTimeString(track.duration);\n    } else {\n      duration = track.duration;\n    }\n  }\n  return duration;\n}\n\nexport default getInitialDuration;\n","import React, { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayFindIndex from 'array-find-index';\n\nimport PlayerContext from './PlayerContext';\nimport GroupContext from './GroupContext';\nimport * as PlayerPropTypes from './PlayerPropTypes';\nimport createCustomMediaElement from './factories/createCustomMediaElement';\nimport ShuffleManager from './utils/ShuffleManager';\nimport { getStateSnapshot, restoreStateFromSnapshot } from './utils/snapshot';\nimport getSourceList from './utils/getSourceList';\nimport getTrackSources from './utils/getTrackSources';\nimport getTimeRangesArray from './utils/getTimeRangesArray';\nimport findTrackIndexByUrl from './utils/findTrackIndexByUrl';\nimport isPlaylistValid from './utils/isPlaylistValid';\nimport getRepeatStrategy from './utils/getRepeatStrategy';\nimport convertToNumberWithinIntervalBounds from './utils/convertToNumberWithinIntervalBounds';\nimport { logError, logWarning } from './utils/console';\nimport getDisplayText from './utils/getDisplayText';\nimport getInitialDuration from './utils/getInitialDuration';\nimport { repeatStrategyOptions } from './constants';\n\nfunction playErrorHandler(err) {\n  logError(err);\n  if (err.name === 'NotAllowedError') {\n    const warningMessage =\n      'Media playback failed at ' +\n      new Date().toLocaleTimeString() +\n      '! (Perhaps autoplay is disabled in this browser.)';\n    logWarning(warningMessage);\n  }\n}\n\n// Existing Media Session API implementations have default handlers\n// for play/pause, and may yield unexpected behavior if custom\n// play/pause handlers are defined - so let's leave them be.\nconst supportableMediaSessionActions = [\n  'previoustrack',\n  'nexttrack',\n  'seekbackward',\n  'seekforward'\n];\n\nconst defaultState = {\n  // indicates whether media player should be paused\n  paused: true,\n  // elapsed time for active track, in seconds\n  currentTime: 0,\n  // The most recent targeted time, in seconds, for seek preview\n  seekPreviewTime: 0,\n  /* true if the user is currently dragging the mouse\n   * to seek a new track position\n   */\n  seekInProgress: false,\n  /* true if media was playing when seek previewing began,\n   * it was paused, and it should be resumed on seek\n   * complete\n   */\n  awaitingResumeOnSeekComplete: false,\n  // true if media will play once new track has loaded\n  awaitingPlayAfterTrackLoad: false,\n  // the duration in seconds of the loaded track\n  duration: 0,\n  // array describing the buffered ranges in the loaded track\n  bufferedRanges: [],\n  // array describing the already-played ranges in the loaded track\n  playedRanges: [],\n  // array describing the seekable ranges in the loaded track\n  seekableRanges: [],\n  // true if the media is currently stalled pending data buffering\n  stalled: false,\n  // true if the active track should play on the next componentDidUpdate\n  shouldRequestPlayOnNextUpdate: false,\n  /* true if an error occurs while fetching the active track media data\n   * or if its type is not a supported media format\n   */\n  mediaCannotPlay: false,\n  // maximum currentTime since the current track has been playing\n  maxKnownTime: 0\n};\n\n// assumes playlist is valid\nfunction getGoToTrackState({\n  prevState,\n  index,\n  track,\n  shouldPlay = true,\n  shouldForceLoad = false\n}) {\n  const isNewTrack = prevState.activeTrackIndex !== index;\n  const shouldLoadAsNew = Boolean(isNewTrack || shouldForceLoad);\n  const currentTime = track.startingTime || 0;\n  return {\n    duration: getInitialDuration(track),\n    activeTrackIndex: index,\n    trackLoading: shouldLoadAsNew,\n    mediaCannotPlay: prevState.mediaCannotPlay && !shouldLoadAsNew,\n    currentTime: convertToNumberWithinIntervalBounds(currentTime, 0),\n    loop: shouldLoadAsNew ? false : prevState.loop,\n    shouldRequestPlayOnNextUpdate: Boolean(shouldPlay),\n    awaitingPlayAfterTrackLoad: Boolean(shouldPlay),\n    awaitingForceLoad: Boolean(shouldForceLoad),\n    maxKnownTime: shouldLoadAsNew ? 0 : prevState.maxKnownTime\n  };\n}\n\n/**\n * Wraps an area which shares a common [`playerContext`](#playercontext)\n */\nexport class PlayerContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    let currentTime = 0;\n    const activeTrackIndex = convertToNumberWithinIntervalBounds(\n      props.startingTrackIndex,\n      0\n    );\n    const playlistIsValid = isPlaylistValid(props.playlist);\n    if (playlistIsValid && props.playlist[activeTrackIndex]) {\n      currentTime = props.playlist[activeTrackIndex].startingTime || 0;\n    }\n    const { initialStateSnapshot } = props;\n    let restoredStateFromSnapshot = {};\n    if (initialStateSnapshot) {\n      try {\n        restoredStateFromSnapshot = restoreStateFromSnapshot(\n          initialStateSnapshot,\n          props\n        );\n      } catch (err) {\n        logWarning(err);\n        logWarning('Loading Cassette state from snapshot failed.');\n        logWarning(\n          `Failed snapshot:\\n${JSON.stringify(initialStateSnapshot, null, 2)}`\n        );\n      }\n    }\n    this.state = {\n      ...defaultState,\n      // index matching requested track (whether track has loaded or not)\n      activeTrackIndex,\n      // whether we're waiting on loading metadata for the active track\n      trackLoading: isPlaylistValid(props.playlist),\n      // the current timestamp on the active track in seconds\n      currentTime: convertToNumberWithinIntervalBounds(currentTime, 0),\n      // the latest volume of the media, between 0 and 1.\n      volume: convertToNumberWithinIntervalBounds(props.defaultVolume, 0, 1),\n      // true if the media has been muted\n      muted: props.defaultMuted,\n      // whether to loop the active track\n      loop: props.defaultRepeatStrategy === 'track',\n      // true if playlist should continue at start after completion\n      cycle: props.defaultRepeatStrategy === 'playlist',\n      // whether to randomly pick next track from playlist after one finishes\n      shuffle: props.defaultShuffle,\n      // Rate at which media should be played. 1.0 is normal speed.\n      playbackRate: props.defaultPlaybackRate,\n      // true if user is currently dragging mouse to change the volume\n      setVolumeInProgress: false,\n      // initialize shouldRequestPlayOnNextUpdate from autoplay prop\n      shouldRequestPlayOnNextUpdate: props.autoplay && playlistIsValid,\n      awaitingForceLoad: false,\n      // duration might be set on track object\n      duration: getInitialDuration(\n        playlistIsValid && props.playlist[activeTrackIndex]\n      ),\n      // playlist prop copied to state (for getDerivedStateFromProps)\n      __playlist__: props.playlist,\n      // load overrides from previously-captured state snapshot\n      ...restoredStateFromSnapshot\n    };\n\n    // volume at last time we were unmuted and not actively setting volume\n    this.lastStableVolume = this.state.volume;\n\n    // used to keep track of play history when we are shuffling\n    this.shuffler = new ShuffleManager(getSourceList(props.playlist), {\n      allowBackShuffle: props.allowBackShuffle\n    });\n\n    // html media element used for playback\n    this.media = null;\n\n    this.videoHostElementList = [];\n    this.videoHostOccupiedCallbacks = new Map();\n    this.videoHostVacatedCallbacks = new Map();\n\n    // bind internal methods\n    this.handleTrackPlaybackFailure = this.handleTrackPlaybackFailure.bind(\n      this\n    );\n\n    // bind callback methods to pass to descendant elements\n    this.togglePause = this.togglePause.bind(this);\n    this.selectTrackIndex = this.selectTrackIndex.bind(this);\n    this.forwardSkip = this.forwardSkip.bind(this);\n    this.backSkip = this.backSkip.bind(this);\n    this.seekPreview = this.seekPreview.bind(this);\n    this.seekComplete = this.seekComplete.bind(this);\n    this.setVolume = this.setVolume.bind(this);\n    this.setVolumeComplete = this.setVolumeComplete.bind(this);\n    this.toggleMuted = this.toggleMuted.bind(this);\n    this.toggleShuffle = this.toggleShuffle.bind(this);\n    this.setRepeatStrategy = this.setRepeatStrategy.bind(this);\n    this.setPlaybackRate = this.setPlaybackRate.bind(this);\n    this.registerVideoHostElement = this.registerVideoHostElement.bind(this);\n    this.renderVideoIntoHostElement = this.renderVideoIntoHostElement.bind(\n      this\n    );\n    this.unregisterVideoHostElement = this.unregisterVideoHostElement.bind(\n      this\n    );\n    this.updateVideoHostElement = this.updateVideoHostElement.bind(this);\n\n    // bind media event handlers\n    this.handleMediaPlay = this.handleMediaPlay.bind(this);\n    this.handleMediaPause = this.handleMediaPause.bind(this);\n    this.handleMediaSrcrequest = this.handleMediaSrcrequest.bind(this);\n    this.handleMediaEnded = this.handleMediaEnded.bind(this);\n    this.handleMediaEmptied = this.handleMediaEmptied.bind(this);\n    this.handleMediaStalled = this.handleMediaStalled.bind(this);\n    this.handleMediaCanplaythrough = this.handleMediaCanplaythrough.bind(this);\n    this.handleMediaCanplay = this.handleMediaCanplay.bind(this);\n    this.handleMediaTimeupdate = this.handleMediaTimeupdate.bind(this);\n    this.handleMediaLoadeddata = this.handleMediaLoadeddata.bind(this);\n    this.handleMediaVolumechange = this.handleMediaVolumechange.bind(this);\n    this.handleMediaDurationchange = this.handleMediaDurationchange.bind(this);\n    this.handleMediaProgress = this.handleMediaProgress.bind(this);\n    this.handleMediaLoopchange = this.handleMediaLoopchange.bind(this);\n    this.handleMediaRatechange = this.handleMediaRatechange.bind(this);\n  }\n\n  componentDidMount() {\n    const media = (this.media = createCustomMediaElement(\n      this.props.createMediaElement()\n    ));\n\n    const {\n      defaultPlaybackRate,\n      crossOrigin,\n      playlist,\n      autoplayDelayInSeconds,\n      mediaElementRef,\n      getPosterImageForTrack,\n      getMediaTitleAttributeForTrack,\n      onActiveTrackUpdate\n    } = this.props;\n    const {\n      volume,\n      muted,\n      playbackRate,\n      loop,\n      activeTrackIndex,\n      shouldRequestPlayOnNextUpdate\n    } = this.state;\n\n    // initialize media properties\n    // We used to set currentTime here.. now waiting for loadeddata.\n    // This avoids an issue where some browsers ignore or delay currentTime\n    // updates when in the HAVE_NOTHING state.\n    media.defaultPlaybackRate = defaultPlaybackRate;\n    if (crossOrigin) {\n      media.crossOrigin = crossOrigin;\n    }\n    media.volume = volume;\n    media.muted = muted;\n    media.playbackRate = playbackRate;\n    media.loop = loop;\n    media.setAttribute('playsinline', '');\n    media.setAttribute('webkit-playsinline', '');\n    media.setAttribute('preload', 'metadata');\n    media.setAttribute(\n      'poster',\n      getPosterImageForTrack(playlist[activeTrackIndex])\n    );\n    media.setAttribute(\n      'title',\n      getMediaTitleAttributeForTrack(playlist[activeTrackIndex])\n    );\n    // add listeners for media events\n    media.addEventListener('play', this.handleMediaPlay);\n    media.addEventListener('pause', this.handleMediaPause);\n    media.addEventListener('ended', this.handleMediaEnded);\n    media.addEventListener('stalled', this.handleMediaStalled);\n    media.addEventListener('emptied', this.handleMediaEmptied);\n    media.addEventListener('canplay', this.handleMediaCanplay);\n    media.addEventListener('canplaythrough', this.handleMediaCanplaythrough);\n    media.addEventListener('timeupdate', this.handleMediaTimeupdate);\n    media.addEventListener('loadeddata', this.handleMediaLoadeddata);\n    media.addEventListener('volumechange', this.handleMediaVolumechange);\n    media.addEventListener('durationchange', this.handleMediaDurationchange);\n    media.addEventListener('progress', this.handleMediaProgress);\n    media.addEventListener('ratechange', this.handleMediaRatechange);\n    // add listeners for special events\n    media.addEventListener('srcrequest', this.handleMediaSrcrequest);\n    media.addEventListener('loopchange', this.handleMediaLoopchange);\n\n    // set source elements for current track\n    this.setMediaElementSources();\n\n    // initially mount media element in the hidden container (this may change)\n    this.mediaContainer.appendChild(media);\n\n    if (shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      this.delayTimeout = setTimeout(() => {\n        this.togglePause(false);\n      }, autoplayDelayInSeconds * 1000);\n    }\n\n    if (mediaElementRef) {\n      mediaElementRef(media);\n    }\n\n    if (onActiveTrackUpdate) {\n      onActiveTrackUpdate({\n        track: playlist[activeTrackIndex],\n        trackIndex: activeTrackIndex,\n        previousTrack: null,\n        previousTrackIndex: null\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const newPlaylist = nextProps.playlist;\n\n    if (newPlaylist === prevState.__playlist__) {\n      // reference comparison is equal so we'll\n      // assume the playlist is unchanged.\n      return null;\n    }\n\n    const baseNewState = {\n      __playlist__: newPlaylist\n    };\n\n    // check if the new playlist is invalid\n    if (!isPlaylistValid(newPlaylist)) {\n      return {\n        ...defaultState,\n        ...baseNewState,\n        activeTrackIndex: 0,\n        trackLoading: false\n      };\n    }\n\n    // check if the activeTrackIndex doesn't need to be updated\n    const prevSources = getTrackSources(\n      prevState.__playlist__,\n      prevState.activeTrackIndex\n    );\n\n    if (newPlaylist[prevState.activeTrackIndex]) {\n      // the sources if we stay on the same track index\n      const currentSources = getTrackSources(\n        newPlaylist,\n        prevState.activeTrackIndex\n      );\n      // non-comprehensive but probably accurate check\n      if (prevSources[0].src === currentSources[0].src) {\n        // our active track index already matches\n        return baseNewState;\n      }\n    }\n\n    /* if the track we're already playing is in the new playlist, update the\n     * activeTrackIndex.\n     */\n    const newTrackIndex = findTrackIndexByUrl(newPlaylist, prevSources[0].src);\n    if (newTrackIndex !== -1) {\n      return {\n        ...baseNewState,\n        activeTrackIndex: newTrackIndex\n      };\n    }\n\n    // if not, then load the first track in the new playlist, and pause.\n    return {\n      ...baseNewState,\n      ...getGoToTrackState({\n        prevState,\n        track: newPlaylist[0],\n        index: 0,\n        shouldPlay: false,\n        shouldForceLoad: true\n      }),\n      mediaCannotPlay: false,\n      awaitingPlayAfterTrackLoad: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.media.defaultPlaybackRate = this.props.defaultPlaybackRate;\n    this.media.crossOrigin = this.props.crossOrigin;\n\n    this.shuffler.setList(getSourceList(this.props.playlist));\n    this.shuffler.setOptions({\n      allowBackShuffle: this.props.allowBackShuffle\n    });\n\n    const prevSources = getTrackSources(\n      prevProps.playlist,\n      prevState.activeTrackIndex\n    );\n    const newSources = getTrackSources(\n      this.props.playlist,\n      this.state.activeTrackIndex\n    );\n    const prevTrack = prevProps.playlist[prevState.activeTrackIndex];\n    const newTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (\n      this.state.awaitingForceLoad ||\n      prevSources[0].src !== newSources[0].src\n    ) {\n      this.setMediaElementSources();\n      this.media.setAttribute(\n        'poster',\n        this.props.getPosterImageForTrack(newTrack)\n      );\n      this.media.setAttribute(\n        'title',\n        this.props.getMediaTitleAttributeForTrack(newTrack)\n      );\n      this.setState({\n        awaitingForceLoad: false\n      });\n      if (!this.state.shuffle) {\n        // after toggling off shuffle, we defer clearing the shuffle\n        // history until we actually change tracks - if the user quickly\n        // toggles  shuffle off then back on again, we don't want to have\n        // lost our history.\n        this.shuffler.clear();\n      }\n    }\n\n    if (this.props.onActiveTrackUpdate && prevTrack !== newTrack) {\n      this.props.onActiveTrackUpdate({\n        track: newTrack,\n        trackIndex: this.state.activeTrackIndex,\n        previousTrack: prevTrack,\n        previousTrackIndex: prevState.activeTrackIndex\n      });\n    }\n\n    if (prevProps !== this.props && !this.media.paused) {\n      // update running media session based on new props\n      this.stealMediaSession();\n    }\n\n    if (this.state.shouldRequestPlayOnNextUpdate) {\n      this.setState({\n        shouldRequestPlayOnNextUpdate: false\n      });\n      // media.currentSrc is updated asynchronously so we should\n      // play async to avoid weird intermediate state issues\n      setTimeout(() => {\n        this.togglePause(false);\n      });\n    }\n\n    clearTimeout(this.snapshotUpdateTimeout);\n    this.snapshotUpdateTimeout = setTimeout(() => {\n      if (this.props.onStateSnapshot) {\n        this.props.onStateSnapshot(getStateSnapshot(this.state));\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    const { media } = this;\n    // Media element creation will have failed if MutationObserver isn't\n    // supported by the browser. The parent might use an Error Boundary\n    // to display a fallback and so we try to avoid triggering *additional*\n    // errors while the component unmounts.\n    if (media) {\n      // remove listeners for media events\n      media.removeEventListener('play', this.handleMediaPlay);\n      media.removeEventListener('pause', this.handleMediaPause);\n      media.removeEventListener('ended', this.handleMediaEnded);\n      media.removeEventListener('stalled', this.handleMediaStalled);\n      media.removeEventListener('emptied', this.handleMediaEmptied);\n      media.removeEventListener(\n        'canplaythrough',\n        this.handleMediaCanplaythrough\n      );\n      media.removeEventListener('canplay', this.handleMediaCanplay);\n      media.removeEventListener('timeupdate', this.handleMediaTimeupdate);\n      media.removeEventListener('loadeddata', this.handleMediaLoadeddata);\n      media.removeEventListener('volumechange', this.handleMediaVolumechange);\n      media.removeEventListener(\n        'durationchange',\n        this.handleMediaDurationchange\n      );\n      media.removeEventListener('progress', this.handleMediaProgress);\n      media.removeEventListener('ratechange', this.handleMediaRatechange);\n      // remove special event listeners on the media element\n      media.removeEventListener('srcrequest', this.handleMediaSrcrequest);\n      media.removeEventListener('loopchange', this.handleMediaLoopchange);\n\n      const sourceElements = media.querySelectorAll('source');\n      for (const sourceElement of sourceElements) {\n        sourceElement.removeEventListener(\n          'error',\n          this.handleTrackPlaybackFailure\n        );\n      }\n    }\n    clearTimeout(this.gapLengthTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  stealMediaSession() {\n    if (\n      // eslint-disable-next-line no-undef\n      !(window.MediaSession && navigator.mediaSession instanceof MediaSession)\n    ) {\n      return;\n    }\n    // eslint-disable-next-line no-undef\n    navigator.mediaSession.metadata = new MediaMetadata(\n      this.props.playlist[this.state.activeTrackIndex]\n    );\n    supportableMediaSessionActions\n      .map(action => {\n        if (this.props.supportedMediaSessionActions.indexOf(action) === -1) {\n          return null;\n        }\n        const seekLength = this.props.mediaSessionSeekLengthInSeconds;\n        switch (action) {\n          case 'play':\n            return this.togglePause.bind(this, false);\n          case 'pause':\n            return this.togglePause.bind(this, true);\n          case 'previoustrack':\n            return this.backSkip;\n          case 'nexttrack':\n            return this.forwardSkip;\n          case 'seekbackward':\n            return () => (this.media.currentTime -= seekLength);\n          case 'seekforward':\n            return () => (this.media.currentTime += seekLength);\n          default:\n            return undefined;\n        }\n      })\n      .forEach((handler, i) => {\n        navigator.mediaSession.setActionHandler(\n          supportableMediaSessionActions[i],\n          handler\n        );\n      });\n  }\n\n  setMediaElementSources() {\n    // remove current sources\n    const { playlist } = this.props;\n    let firstChild;\n    while ((firstChild = this.media.firstChild)) {\n      this.media.removeChild(firstChild);\n    }\n    if (isPlaylistValid(playlist)) {\n      const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n      // add new sources\n      for (const source of sources) {\n        const sourceElement = document.createElement('source');\n        sourceElement.src = source.src;\n        if (source.type) {\n          sourceElement.type = source.type;\n        }\n        sourceElement.addEventListener(\n          'error',\n          this.handleTrackPlaybackFailure\n        );\n        this.media.appendChild(sourceElement);\n      }\n    }\n    // cancel playback and re-scan new sources\n    this.media.load();\n  }\n\n  handleTrackPlaybackFailure(event) {\n    this.setState({\n      mediaCannotPlay: true\n    });\n    if (this.props.onTrackPlaybackFailure) {\n      this.props.onTrackPlaybackFailure({\n        track: this.props.playlist[this.state.activeTrackIndex],\n        trackIndex: this.state.activeTrackIndex,\n        event\n      });\n    }\n  }\n\n  registerVideoHostElement(hostElement, { onHostOccupied, onHostVacated }) {\n    this.videoHostElementList = this.videoHostElementList.concat(hostElement);\n    this.videoHostOccupiedCallbacks.set(hostElement, onHostOccupied);\n    this.videoHostVacatedCallbacks.set(hostElement, onHostVacated);\n  }\n\n  renderVideoIntoHostElement(hostElement) {\n    if (this.videoHostElementList.indexOf(hostElement) === -1) {\n      return;\n    }\n    cancelAnimationFrame(this.videoHostUpdateRaf);\n    this.videoHostUpdateRaf = requestAnimationFrame(() =>\n      this.updateVideoHostElement(hostElement)\n    );\n  }\n\n  unregisterVideoHostElement(hostElement) {\n    this.videoHostElementList = this.videoHostElementList.filter(\n      elem => elem !== hostElement\n    );\n    this.videoHostOccupiedCallbacks.delete(hostElement);\n    this.videoHostVacatedCallbacks.delete(hostElement);\n    if (this.media.parentNode === hostElement) {\n      this.updateVideoHostElement();\n    }\n  }\n\n  updateVideoHostElement(hostElement) {\n    if (!hostElement) {\n      hostElement = this.videoHostElementList[0] || this.mediaContainer;\n    } else {\n      // move hostElement to front of list\n      this.videoHostElementList = [hostElement].concat(\n        this.videoHostElementList.filter(elem => elem !== hostElement)\n      );\n    }\n    const playing = !this.media.paused;\n    const oldHostElement = this.media.parentNode;\n    if (hostElement === oldHostElement) {\n      return;\n    }\n    hostElement.appendChild(this.media);\n    // according to the HTML spec playback should continue, but\n    // some browsers pause the element whenever it is moved around, so\n    // let's make sure playback resumes if that's the case.\n    if (playing && this.media.paused) {\n      this.media.play();\n    }\n    const onVacated = this.videoHostVacatedCallbacks.get(oldHostElement);\n    if (onVacated) {\n      onVacated(this.media);\n    }\n    const onOccupied = this.videoHostOccupiedCallbacks.get(hostElement);\n    if (onOccupied) {\n      onOccupied(this.media);\n    }\n  }\n\n  handleMediaPlay() {\n    this.setState(\n      state =>\n        state.paused === false && state.awaitingPlayAfterTrackLoad === false\n          ? null\n          : { paused: false, awaitingPlayAfterTrackLoad: false }\n    );\n    this.stealMediaSession();\n  }\n\n  handleMediaPause() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaSrcrequest(e) {\n    const { playlist } = this.props;\n    const sources = getTrackSources(playlist, this.state.activeTrackIndex);\n    if (arrayFindIndex(sources, s => s.src === e.srcRequested) !== -1) {\n      // we're good! nothing to update.\n      return;\n    }\n    // looks like 'src' was set from outside our component.\n    // let's see if we can use it.\n    const newTrackIndex = findTrackIndexByUrl(playlist, e.srcRequested);\n    if (newTrackIndex === -1) {\n      logError(\n        `Source '${e.srcRequested}' does not exist in the loaded playlist. ` +\n          `Make sure you've updated the 'playlist' prop to ` +\n          `PlayerContextProvider before you select this track!`\n      );\n      return;\n    }\n    this.selectTrackIndex(newTrackIndex);\n  }\n\n  handleMediaEnded() {\n    if (this.state.seekInProgress) {\n      // nothing to do if we're in the middle of a seek\n      // (this can happen if we're in seekMode: immediate)\n      return;\n    }\n    clearTimeout(this.gapLengthTimeout);\n    const { playlist, loadFirstTrackOnPlaylistComplete } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    const { cycle, activeTrackIndex } = this.state;\n    if (!cycle && activeTrackIndex + 1 >= playlist.length) {\n      if (loadFirstTrackOnPlaylistComplete) {\n        this.goToTrack({\n          index: 0,\n          track: playlist[0],\n          shouldPlay: false,\n          shouldForceLoad: true\n        });\n      }\n      return;\n    }\n    this.gapLengthTimeout = setTimeout(\n      this.forwardSkip,\n      this.props.gapLengthInSeconds * 1000\n    );\n  }\n\n  handleMediaStalled() {\n    this.setState(state => (state.stalled === true ? null : { stalled: true }));\n  }\n\n  handleMediaEmptied() {\n    this.setState(state => (state.paused === true ? null : { paused: true }));\n  }\n\n  handleMediaCanplay() {\n    this.setState(\n      state => (state.trackLoading === false ? null : { trackLoading: false })\n    );\n  }\n\n  handleMediaCanplaythrough() {\n    this.setState(\n      state => (state.stalled === false ? null : { stalled: false })\n    );\n  }\n\n  handleMediaTimeupdate() {\n    const { currentTime, played } = this.media;\n    const { onTimeUpdate, playlist } = this.props;\n    const { activeTrackIndex, trackLoading } = this.state;\n    if (trackLoading) {\n      // we'll get another time update when the track loads\n      // but for now this helps us avoid unnecessarily\n      // jumping back to currentTime: 0 in the UI while\n      // the track is loading.\n      return;\n    }\n    this.setState(state => ({\n      currentTime,\n      playedRanges: getTimeRangesArray(played),\n      maxKnownTime: Math.max(state.maxKnownTime, currentTime)\n    }));\n    if (onTimeUpdate) {\n      onTimeUpdate({\n        currentTime,\n        track: playlist[activeTrackIndex],\n        trackIndex: activeTrackIndex\n      });\n    }\n  }\n\n  handleMediaLoadeddata() {\n    if (this.media.currentTime !== this.state.currentTime) {\n      this.media.currentTime = this.state.currentTime;\n    }\n  }\n\n  handleMediaVolumechange() {\n    const { volume, muted } = this.media;\n    this.setState({ volume, muted });\n  }\n\n  handleMediaDurationchange() {\n    const { duration } = this.media;\n    const activeTrack = this.props.playlist[this.state.activeTrackIndex];\n    if (duration === Infinity) {\n      // This *could* be because we're consuming an unbounded stream.\n      // It could also be because of a weird iOS bug that we want to\n      // try to prevent. See https://github.com/benwiley4000/cassette/issues/355\n\n      // If we still end up with Infinity duration multiple times for\n      // the same track, we'll assume it's correct.\n      if (\n        activeTrack.isUnboundedStream ||\n        activeTrack === this.activeTrackAtLastDurationChange\n      ) {\n        this.setState({\n          duration,\n          currentTime: 0\n        });\n        this.media.currentTime = 0;\n      } else {\n        const { paused } = this.state;\n        this.media.load();\n        if (!paused) {\n          // media.currentSrc is updated asynchronously so we should\n          // play async to avoid weird intermediate state issues\n          setTimeout(() => {\n            this.togglePause(false);\n          });\n        }\n      }\n    } else {\n      this.setState({ duration });\n    }\n    this.activeTrackAtLastDurationChange = activeTrack;\n  }\n\n  handleMediaProgress() {\n    this.setState({\n      bufferedRanges: getTimeRangesArray(this.media.buffered),\n      seekableRanges: getTimeRangesArray(this.media.seekable)\n    });\n  }\n\n  handleMediaLoopchange() {\n    const { loop } = this.media;\n    this.setState(state => (state.loop === loop ? null : { loop }));\n  }\n\n  handleMediaRatechange() {\n    const { playbackRate } = this.media;\n    this.setState(\n      state => (state.playbackRate === playbackRate ? null : { playbackRate })\n    );\n  }\n\n  togglePause(value) {\n    clearTimeout(this.delayTimeout);\n    const pause = typeof value === 'boolean' ? value : !this.state.paused;\n    if (pause) {\n      this.media.pause();\n      return;\n    }\n    if (!this.media.currentSrc) {\n      return;\n    }\n    try {\n      const playPromise = this.media.play();\n      if (playPromise && typeof playPromise.catch === 'function') {\n        playPromise\n          .catch(err => {\n            // AbortError is pretty much always called because we're skipping\n            // tracks quickly or hitting pause before a track has a chance to\n            // play. It's pretty safe to just ignore these error messages.\n            if (err.name !== 'AbortError') {\n              return Promise.reject(err);\n            }\n          })\n          .catch(playErrorHandler);\n      }\n    } catch (err) {\n      playErrorHandler(err);\n    }\n  }\n\n  // assumes playlist is valid - don't call without checking\n  goToTrack(args) {\n    clearTimeout(this.delayTimeout);\n    this.setState(prevState => getGoToTrackState({ prevState, ...args }));\n  }\n\n  selectTrackIndex(index) {\n    const { playlist } = this.props;\n    if (!isPlaylistValid(playlist)) {\n      return;\n    }\n    if (index < 0 || index > playlist.length) {\n      logWarning(`Playlist index ${index} is out of bounds!`);\n      return;\n    }\n    if (this.state.shuffle) {\n      this.shuffler.pickNextItem(index, this.state.activeTrackIndex);\n    }\n    this.goToTrack({ index, track: playlist[index] });\n  }\n\n  backSkip() {\n    const { playlist, stayOnBackSkipThreshold } = this.props;\n    const { media } = this;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      media.currentTime >= stayOnBackSkipThreshold ||\n      (!cycle && activeTrackIndex < 1)\n    ) {\n      media.currentTime = 0;\n      return;\n    }\n    let index;\n    if (shuffle) {\n      const previousItem = this.shuffler.findPreviousItem(activeTrackIndex);\n      if (previousItem === undefined) {\n        // if we aren't allowing backShuffle then we'll hit a stopping point.\n        media.currentTime = 0;\n        return;\n      }\n      index = findTrackIndexByUrl(playlist, previousItem);\n    } else {\n      index = activeTrackIndex - 1;\n      if (index < 0) {\n        index = playlist.length - 1;\n      }\n    }\n    this.goToTrack({ index, track: playlist[index], shouldForceLoad: true });\n  }\n\n  forwardSkip() {\n    const { playlist } = this.props;\n    const { cycle, activeTrackIndex, shuffle } = this.state;\n    if (\n      !isPlaylistValid(playlist) ||\n      (!cycle && activeTrackIndex + 1 >= playlist.length)\n    ) {\n      return;\n    }\n    let index;\n    if (shuffle) {\n      index = findTrackIndexByUrl(\n        playlist,\n        this.shuffler.findNextItem(activeTrackIndex)\n      );\n    } else {\n      index = activeTrackIndex + 1;\n      if (index >= playlist.length) {\n        index = 0;\n      }\n    }\n    this.goToTrack({ index, track: playlist[index], shouldForceLoad: true });\n  }\n\n  seekPreview(targetTime) {\n    if (!isPlaylistValid(this.props.playlist)) {\n      return;\n    }\n    const baseStateUpdate = {\n      seekPreviewTime: targetTime,\n      seekInProgress: true\n    };\n    switch (this.props.seekMode) {\n      case 'paused':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true,\n          currentTime: targetTime\n        }));\n        if (!this.state.trackLoading) {\n          this.media.currentTime = targetTime;\n        }\n        if (!this.state.paused) {\n          this.togglePause(true);\n        }\n        break;\n      case 'immediate':\n        this.setState(({ paused, awaitingResumeOnSeekComplete }) => ({\n          ...baseStateUpdate,\n          awaitingResumeOnSeekComplete: paused\n            ? awaitingResumeOnSeekComplete\n            : true,\n          currentTime: targetTime\n        }));\n        if (!this.state.trackLoading) {\n          this.media.currentTime = targetTime;\n        }\n        if (this.state.awaitingResumeOnSeekComplete && !this.media.ended) {\n          // if we earlier encountered an 'ended' state,\n          // un-pausing becomes necessary to resume playback\n          this.togglePause(false);\n        }\n        break;\n      case 'onrelease':\n        this.setState(baseStateUpdate);\n        break;\n    }\n  }\n\n  seekComplete(targetTime) {\n    const {\n      seekPreviewTime,\n      awaitingResumeOnSeekComplete,\n      trackLoading\n    } = this.state;\n    const baseStateUpdate = {\n      seekInProgress: false,\n      awaitingResumeOnSeekComplete: false\n    };\n    const currentTime =\n      typeof targetTime === 'number' ? targetTime : seekPreviewTime;\n\n    if (isNaN(currentTime)) {\n      this.setState(baseStateUpdate);\n      return;\n    }\n    this.setState({\n      ...baseStateUpdate,\n      /* we'll update currentTime on the media listener hook anyway,\n       * but that might not happen for a bit... so the optimistic update\n       * helps us avoid the progress bar jumping around and confusing the user.\n       * https://github.com/benwiley4000/cassette/issues/209\n       */\n      currentTime\n    });\n    if (!trackLoading) {\n      this.media.currentTime = currentTime;\n    }\n    if (awaitingResumeOnSeekComplete) {\n      if (this.media.ended) {\n        this.forwardSkip();\n      } else {\n        this.togglePause(false);\n      }\n    }\n  }\n\n  setVolume(volume, inProgress = true) {\n    if (inProgress && !this.state.setVolumeInProgress) {\n      this.setState({\n        setVolumeInProgress: true\n      });\n    }\n    const volumeInBounds = convertToNumberWithinIntervalBounds(volume, 0, 1);\n    this.media.muted = volumeInBounds === 0 ? true : false;\n    this.media.volume = volumeInBounds;\n  }\n\n  setVolumeComplete(volume) {\n    if (typeof volume === 'number') {\n      this.setVolume(volume, false);\n    }\n    this.setState({\n      setVolumeInProgress: false\n    });\n    if (!this.media.muted) {\n      this.lastStableVolume = this.media.volume;\n    }\n  }\n\n  toggleMuted(value) {\n    const muted = typeof value === 'boolean' ? value : !this.state.muted;\n    this.media.muted = muted;\n    if (!muted) {\n      this.media.volume = this.lastStableVolume;\n    }\n  }\n\n  toggleShuffle(value) {\n    const shuffle = typeof value === 'boolean' ? value : !this.state.shuffle;\n    this.setState({ shuffle });\n  }\n\n  setRepeatStrategy(repeatStrategy) {\n    if (repeatStrategyOptions.indexOf(repeatStrategy) === -1) {\n      logWarning(\n        'repeatStrategy \"' +\n          repeatStrategy +\n          '\" is not one of: ' +\n          repeatStrategyOptions.split(', ') +\n          '.'\n      );\n      return;\n    }\n    switch (repeatStrategy) {\n      case 'track':\n        // state update is automatic\n        this.media.loop = true;\n        break;\n      case 'playlist':\n        this.setState({\n          loop: false,\n          cycle: true\n        });\n        this.media.loop = false;\n        break;\n      case 'none':\n        this.setState({\n          loop: false,\n          cycle: false\n        });\n        this.media.loop = false;\n        break;\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n\n  getControlProps() {\n    const { props, state } = this;\n    const playerContext = {\n      playlist: props.playlist,\n      activeTrackIndex: state.activeTrackIndex,\n      trackLoading: state.trackLoading,\n      paused: state.paused,\n      currentTime: state.currentTime,\n      seekPreviewTime: state.seekPreviewTime,\n      seekInProgress: state.seekInProgress,\n      awaitingPlayResume:\n        state.awaitingResumeOnSeekComplete || state.awaitingPlayAfterTrackLoad,\n      duration:\n        state.duration === Infinity ? state.maxKnownTime : state.duration,\n      bufferedRanges: state.bufferedRanges,\n      playedRanges: state.playedRanges,\n      seekableRanges: state.seekableRanges,\n      volume: state.volume,\n      muted: state.muted,\n      shuffle: state.shuffle,\n      stalled: state.stalled,\n      playbackRate: state.playbackRate,\n      mediaCannotPlay: state.mediaCannotPlay,\n      setVolumeInProgress: state.setVolumeInProgress,\n      repeatStrategy: getRepeatStrategy(state.loop, state.cycle),\n      registerVideoHostElement: this.registerVideoHostElement,\n      renderVideoIntoHostElement: this.renderVideoIntoHostElement,\n      unregisterVideoHostElement: this.unregisterVideoHostElement,\n      onTogglePause: this.togglePause,\n      onSelectTrackIndex: this.selectTrackIndex,\n      onBackSkip: this.backSkip,\n      onForwardSkip: this.forwardSkip,\n      onSeekPreview: this.seekPreview,\n      onSeekComplete: this.seekComplete,\n      onSetVolume: this.setVolume,\n      onSetVolumeComplete: this.setVolumeComplete,\n      onToggleMuted: this.toggleMuted,\n      onToggleShuffle: this.toggleShuffle,\n      onSetRepeatStrategy: this.setRepeatStrategy,\n      onSetPlaybackRate: this.setPlaybackRate\n    };\n    if (this.playerContext) {\n      // only update this.playerContext if something has changed\n      for (const key of Object.keys(this.playerContext)) {\n        if (playerContext[key] !== this.playerContext[key]) {\n          this.playerContext = playerContext;\n          break;\n        }\n      }\n    } else {\n      // first time - nothing to compare\n      this.playerContext = playerContext;\n    }\n    return this.playerContext;\n  }\n\n  render() {\n    const playerContext = this.getControlProps();\n    return (\n      <Fragment>\n        <div ref={elem => (this.mediaContainer = elem)} hidden />\n        <PlayerContext.Provider value={playerContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(playerContext)\n            : this.props.children}\n        </PlayerContext.Provider>\n      </Fragment>\n    );\n  }\n}\n\nPlayerContextProvider.propTypes = {\n  playlist: PropTypes.arrayOf(PlayerPropTypes.track.isRequired).isRequired,\n  autoplay: PropTypes.bool.isRequired,\n  createMediaElement: PropTypes.func.isRequired,\n  autoplayDelayInSeconds: PropTypes.number.isRequired,\n  gapLengthInSeconds: PropTypes.number.isRequired,\n  crossOrigin: PlayerPropTypes.crossOriginAttribute,\n  defaultVolume: PropTypes.number.isRequired,\n  defaultMuted: PropTypes.bool,\n  defaultRepeatStrategy: PlayerPropTypes.repeatStrategy.isRequired,\n  defaultShuffle: PropTypes.bool,\n  defaultPlaybackRate: PropTypes.number.isRequired,\n  startingTrackIndex: PropTypes.number.isRequired,\n  loadFirstTrackOnPlaylistComplete: PropTypes.bool,\n  seekMode: PlayerPropTypes.seekMode.isRequired,\n  maintainPlaybackRate: PropTypes.bool.isRequired,\n  allowBackShuffle: PropTypes.bool,\n  stayOnBackSkipThreshold: PropTypes.number.isRequired,\n  supportedMediaSessionActions: PropTypes.arrayOf(\n    PlayerPropTypes.mediaSessionAction.isRequired\n  ).isRequired,\n  mediaSessionSeekLengthInSeconds: PropTypes.number.isRequired,\n  mediaElementRef: PropTypes.func,\n  initialStateSnapshot: PropTypes.object,\n  onStateSnapshot: PropTypes.func,\n  onActiveTrackUpdate: PropTypes.func,\n  // A function called when the media element's currentTime attribute has changed\n  onTimeUpdate: PropTypes.func,\n  onTrackPlaybackFailure: PropTypes.func,\n  getPosterImageForTrack: PropTypes.func.isRequired,\n  getMediaTitleAttributeForTrack: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nPlayerContextProvider.defaultProps = {\n  autoplay: false,\n  autoplayDelayInSeconds: 0,\n  createMediaElement: () => document.createElement('video'),\n  gapLengthInSeconds: 0,\n  defaultVolume: 1,\n  defaultMuted: false,\n  defaultRepeatStrategy: 'playlist',\n  defaultShuffle: false,\n  defaultPlaybackRate: 1,\n  startingTrackIndex: 0,\n  loadFirstTrackOnPlaylistComplete: true,\n  seekMode: 'immediate',\n  maintainPlaybackRate: false,\n  allowBackShuffle: false,\n  stayOnBackSkipThreshold: 5,\n  supportedMediaSessionActions: ['play', 'pause', 'previoustrack', 'nexttrack'],\n  mediaSessionSeekLengthInSeconds: 10,\n  getPosterImageForTrack(track) {\n    return track && track.artwork ? track.artwork[0].src : '';\n  },\n  getMediaTitleAttributeForTrack: getDisplayText\n};\n\nexport class PlayerContextGroupMember extends Component {\n  componentDidMount() {\n    this.props.groupContext.registerMediaElement(this.mediaElement);\n  }\n\n  componentWillUnmount() {\n    // Media element might not exist\n    // (see componentWillUnmount of PlayerContextProvider)\n    if (this.mediaElement) {\n      this.props.groupContext.unregisterMediaElement(this.mediaElement);\n    }\n  }\n\n  render() {\n    const { groupContext, props } = this.props;\n    const { mediaElementRef, ...rest } = props;\n    return (\n      <PlayerContextProvider\n        {...groupContext.groupProps}\n        {...rest}\n        mediaElementRef={ref => {\n          if (mediaElementRef) {\n            mediaElementRef(ref);\n          }\n          this.mediaElement = ref;\n        }}\n      />\n    );\n  }\n}\n\nPlayerContextGroupMember.propTypes = {\n  groupContext: PropTypes.shape({\n    groupProps: PropTypes.object.isRequired,\n    registerMediaElement: PropTypes.func.isRequired,\n    unregisterMediaElement: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction PlayerContextGroupConsumer(props) {\n  return (\n    <GroupContext.Consumer>\n      {groupContext => {\n        if (!groupContext) {\n          return createElement(PlayerContextProvider, props);\n        }\n        return createElement(PlayerContextGroupMember, {\n          groupContext,\n          props\n        });\n      }}\n    </GroupContext.Consumer>\n  );\n}\n\nexport default PlayerContextGroupConsumer;\n","// TODO: support Preact, Inferno, etc.\nfunction getReactParentNameStack(componentInstance) {\n  const fiber = componentInstance._reactInternalFiber;\n  const parentStack = [];\n  let owner = fiber;\n  if (!owner) {\n    return parentStack;\n  }\n  while ((owner = owner._debugOwner)) {\n    if (owner.type.name) {\n      parentStack.push(owner.type.name);\n    }\n  }\n  return parentStack;\n}\n\nexport default getReactParentNameStack;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerContext from './PlayerContext';\n\nimport { logWarning } from './utils/console';\nimport getReactParentNameStack from './utils/getReactParentNameStack';\n\nclass PlayerContextConsumer extends PureComponent {\n  render() {\n    const { children, filterList } = this.props;\n    if (!filterList) {\n      if (!this.warnedAboutFilterList) {\n        let warning = `\n          Please pass the filterList prop to PlayerContextConsumer in order\n          to avoid unnecessarily frequent re-renders, e.g.\n\n          const filterList = ['paused', 'onTogglePause'];\n          // ...\n          <PlayerContextConsumer filterList={filterList}>\n            {({ paused, onTogglePause }) => {\n              return <div>{/* ... */}</div>;\n            }}\n          </PlayerContextConsumer>\n        `;\n        for (const parentName of getReactParentNameStack(this)) {\n          warning += `\n            Rendered by ${parentName}`;\n        }\n        logWarning(warning);\n        this.warnedAboutFilterList = true;\n      }\n      return <PlayerContext.Consumer>{children}</PlayerContext.Consumer>;\n    }\n\n    const flags = PlayerContext.__cassetteGetObservedBits(filterList);\n    return (\n      <PlayerContext.Consumer unstable_observedBits={flags}>\n        {playerContext => {\n          const usedContext = {};\n          for (const name of filterList) {\n            if (playerContext.hasOwnProperty(name)) {\n              usedContext[name] = playerContext[name];\n            }\n          }\n          return children(usedContext);\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nPlayerContextConsumer.propTypes = {\n  children: PropTypes.func.isRequired,\n  filterList: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default PlayerContextConsumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GroupContext from './GroupContext';\n\n/**\n * A wrapper which can be used to share configuration among multiple descendant [`PlayerContextProvider`](#playercontextprovider) instances as well as prevent multiple media elements from playing audio simultaneously\n */\nexport class PlayerContextGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.registerMediaElement = this.registerMediaElement.bind(this);\n    this.unregisterMediaElement = this.unregisterMediaElement.bind(this);\n    this.enforceOneMediaSourceOnly = this.enforceOneMediaSourceOnly.bind(this);\n    this.mediaElements = [];\n  }\n\n  registerMediaElement(elem) {\n    this.mediaElements = this.mediaElements.concat(elem);\n    elem.addEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.addEventListener('volumechange', this.enforceOneMediaSourceOnly, true);\n  }\n\n  unregisterMediaElement(elem) {\n    this.mediaElements = this.mediaElements.filter(element => elem !== element);\n    elem.removeEventListener('play', this.enforceOneMediaSourceOnly, true);\n    elem.removeEventListener(\n      'volumechange',\n      this.enforceOneMediaSourceOnly,\n      true\n    );\n  }\n\n  enforceOneMediaSourceOnly(e) {\n    const mediaElement = e.target;\n    const { paused, muted } = mediaElement;\n    if (paused || muted) {\n      return;\n    }\n    for (const element of this.mediaElements) {\n      if (element !== mediaElement && !element.muted) {\n        element.pause();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <GroupContext.Consumer>\n        {groupContext => {\n          const value = groupContext\n            ? {\n                ...groupContext,\n                groupProps: { ...groupContext.groupProps, ...this.props }\n              }\n            : {\n                groupProps: this.props,\n                registerMediaElement: this.registerMediaElement,\n                unregisterMediaElement: this.unregisterMediaElement\n              };\n          return (\n            <GroupContext.Provider value={value}>\n              {this.props.children}\n            </GroupContext.Provider>\n          );\n        }}\n      </GroupContext.Consumer>\n    );\n  }\n}\n\nPlayerContextGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PlayerContextGroup;\n","import createSingleGlobalContext from './utils/createSingleGlobalContext';\nimport { logWarning } from './utils/console';\n\nexport default createSingleGlobalContext({\n  displayName: 'FullscreenContext',\n  defaultValue: {\n    fullscreen: false,\n    requestFullscreen() {\n      logWarning(\n        'Fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    },\n    requestExitFullscreen() {\n      logWarning(\n        'Exit fullscreen request ignored since there is no ' +\n          'FullscreenContextProvider ancestor.'\n      );\n    }\n  },\n  keysWillUpdate: ['fullscreen']\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullscreenContext from './FullscreenContext';\n\nconst fullscreenStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Wraps an area which should be fullscreen-able\n */\nexport class FullscreenContextProvider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullscreen: false\n    };\n    this.requestFullscreen = this.requestFullscreen.bind(this);\n    this.requestExitFullscreen = this.requestExitFullscreen.bind(this);\n    this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n    this.fullscreenElement = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('fullscreenchange', this.handleFullscreenChange);\n    document.addEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.addEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'fullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'webkitfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'mozfullscreenchange',\n      this.handleFullscreenChange\n    );\n    document.removeEventListener(\n      'msfullscreenchange',\n      this.handleFullscreenChange\n    );\n  }\n\n  requestFullscreen() {\n    if (!this.props.fullscreenEnabled) {\n      return;\n    }\n    if (this.fullscreenElement.requestFullscreen) {\n      this.fullscreenElement.requestFullscreen();\n    } else if (this.fullscreenElement.webkitRequestFullscreen) {\n      this.fullscreenElement.webkitRequestFullscreen();\n    } else if (this.fullscreenElement.mozRequestFullscreen) {\n      this.fullscreenElement.mozRequestFullScreen();\n    } else if (this.fullscreenElement.msRequestFullscreen) {\n      this.fullscreenElement.msRequestFullscreen();\n    }\n  }\n\n  requestExitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.mozExitFullscreen();\n    }\n  }\n\n  handleFullscreenChange() {\n    const documentFullscreenElement =\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement;\n    this.setState({\n      fullscreen: documentFullscreenElement === this.fullscreenElement\n    });\n  }\n\n  getFullscreenContext() {\n    const fullscreenContext = {\n      fullscreen: this.state.fullscreen,\n      requestFullscreen: this.requestFullscreen,\n      requestExitFullscreen: this.requestExitFullscreen\n    };\n    if (\n      this.fullscreenContext &&\n      fullscreenContext.fullscreen === this.fullscreenContext.fullscreen\n    ) {\n      // no change\n      return this.fullscreenContext;\n    }\n    return (this.fullscreenContext = fullscreenContext);\n  }\n\n  render() {\n    const fullscreenContext = this.getFullscreenContext();\n    return (\n      <div\n        ref={elem => (this.fullscreenElement = elem)}\n        style={this.state.fullscreen ? fullscreenStyle : undefined}\n      >\n        <FullscreenContext.Provider value={fullscreenContext}>\n          {typeof this.props.children === 'function'\n            ? this.props.children(fullscreenContext)\n            : this.props.children}\n        </FullscreenContext.Provider>\n      </div>\n    );\n  }\n}\n\nFullscreenContextProvider.propTypes = {\n  fullscreenEnabled: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nFullscreenContextProvider.defaultProps = {\n  fullscreenEnabled: true\n};\n\nexport default FullscreenContextProvider;\n","import React, { createElement } from 'react';\n\nimport PlayerContext from './PlayerContext';\nimport FullscreenContext from './FullscreenContext';\nimport { logWarning } from './utils/console';\n\nfunction playerContextFilter(component, contextPropNames) {\n  const warned = {};\n  const childName = component.displayName || component.name;\n  const flags = PlayerContext.__cassetteGetObservedBits(contextPropNames);\n  function PlayerContextFilter(props) {\n    return (\n      <FullscreenContext.Consumer>\n        {fullscreenContext => (\n          <PlayerContext.Consumer unstable_observedBits={flags}>\n            {playerContext => {\n              const childProps = { ...props };\n              for (const propName of contextPropNames) {\n                if (playerContext.hasOwnProperty(propName)) {\n                  childProps[propName] = playerContext[propName];\n                } else if (fullscreenContext.hasOwnProperty(propName)) {\n                  childProps[propName] = fullscreenContext[propName];\n                } else if (!warned[propName]) {\n                  logWarning(\n                    \"Prop '\" +\n                      propName +\n                      \"' for component \" +\n                      childName +\n                      ' not found in playerContext or fullscreenContext.'\n                  );\n                  warned[propName] = true;\n                }\n              }\n              return createElement(component, childProps);\n            }}\n          </PlayerContext.Consumer>\n        )}\n      </FullscreenContext.Consumer>\n    );\n  }\n  if (childName) {\n    PlayerContextFilter.displayName = `PlayerContextFilter(${childName})`;\n  }\n  return PlayerContextFilter;\n}\n\nexport default playerContextFilter;\n","import PlayerContextProvider from './PlayerContextProvider';\nimport PlayerContext from './PlayerContext';\nimport PlayerContextConsumer from './PlayerContextConsumer';\nimport PlayerContextGroup from './PlayerContextGroup';\nimport FullscreenContextProvider from './FullscreenContextProvider';\nimport FullscreenContext from './FullscreenContext';\nimport playerContextFilter from './playerContextFilter';\nimport * as PlayerPropTypes from './PlayerPropTypes';\n\nexport { PlayerContextProvider };\nexport { PlayerContextConsumer };\nexport { PlayerContextGroup };\nexport { FullscreenContextProvider };\nexport const FullscreenContextConsumer = FullscreenContext.Consumer;\nexport { playerContextFilter };\nexport { PlayerPropTypes };\n\n// undocumented exports\nexport * from './utils/console';\nexport {\n  default as convertToNumberWithinIntervalBounds\n} from './utils/convertToNumberWithinIntervalBounds';\nexport { default as isPlaylistValid } from './utils/isPlaylistValid';\nexport { default as getDisplayText } from './utils/getDisplayText';\nexport { repeatStrategyOptions } from './constants';\nexport const donotuse_PlayerContext = PlayerContext;\nexport const donotuse_FullscreenContext = FullscreenContext;\n"],"sourceRoot":""}